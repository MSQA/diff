package diffGui;

import diff.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Graficke rozhrani pro zobrazeni diffu
 *
 * @author David Marek <david at davidmarek.cz>
 */
public class Window extends javax.swing.JFrame {

    /** Creates new form Window */
    public Window() throws FileNotFoundException, IOException {
		initComponents();
    }

	/**
	 * Dva soubory, jejich diff se pocita.
	 */
    File fst, snd;
	File bfst, bsnd;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseDiffFiles = new javax.swing.JDialog();
        openFirstFileButton = new javax.swing.JButton();
        firstFileField = new javax.swing.JTextField();
        openSecondFileButton = new javax.swing.JButton();
        secondFileField = new javax.swing.JTextField();
        okChooseDiffFilesButton = new javax.swing.JButton();
        cancelChooseDiffFilesButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        diffTable = new javax.swing.JTable();
        removedLinesLabel = new javax.swing.JLabel();
        removedLinesValueLabel = new javax.swing.JLabel();
        addedLinesLabel = new javax.swing.JLabel();
        addedLinesValueLabel = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newDiffMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        exportMenu = new javax.swing.JMenu();
        exportNormalDiffMenuItem = new javax.swing.JMenuItem();
        exportUnifiedDiffMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        exitMenuItem1 = new javax.swing.JMenuItem();

        chooseDiffFiles.setTitle("Choose Diff Files");
        chooseDiffFiles.setMinimumSize(new java.awt.Dimension(438, 155));
        chooseDiffFiles.setModal(true);
        chooseDiffFiles.setResizable(false);

        openFirstFileButton.setText("Open first file");
        openFirstFileButton.setNextFocusableComponent(openSecondFileButton);
        openFirstFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFirstFileButtonActionPerformed(evt);
            }
        });

        firstFileField.setEnabled(false);

        openSecondFileButton.setText("Open second file");
        openSecondFileButton.setNextFocusableComponent(okChooseDiffFilesButton);
        openSecondFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSecondFileButtonActionPerformed(evt);
            }
        });

        secondFileField.setEnabled(false);

        okChooseDiffFilesButton.setText("OK");
        okChooseDiffFilesButton.setNextFocusableComponent(cancelChooseDiffFilesButton);
        okChooseDiffFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okChooseDiffFilesButtonActionPerformed(evt);
            }
        });

        cancelChooseDiffFilesButton.setText("Cancel");
        cancelChooseDiffFilesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelChooseDiffFilesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout chooseDiffFilesLayout = new javax.swing.GroupLayout(chooseDiffFiles.getContentPane());
        chooseDiffFiles.getContentPane().setLayout(chooseDiffFilesLayout);
        chooseDiffFilesLayout.setHorizontalGroup(
            chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseDiffFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(chooseDiffFilesLayout.createSequentialGroup()
                        .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(openFirstFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(openSecondFileButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                            .addComponent(secondFileField, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chooseDiffFilesLayout.createSequentialGroup()
                        .addComponent(okChooseDiffFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelChooseDiffFilesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        chooseDiffFilesLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelChooseDiffFilesButton, okChooseDiffFilesButton});

        chooseDiffFilesLayout.setVerticalGroup(
            chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chooseDiffFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openFirstFileButton)
                    .addComponent(firstFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openSecondFileButton)
                    .addComponent(secondFileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(chooseDiffFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(okChooseDiffFilesButton)
                    .addComponent(cancelChooseDiffFilesButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chooseDiffFilesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {openSecondFileButton, secondFileField});

        chooseDiffFilesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {firstFileField, openFirstFileButton});

        chooseDiffFilesLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cancelChooseDiffFilesButton, okChooseDiffFilesButton});

        chooseDiffFiles.getAccessibleContext().setAccessibleParent(jScrollPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Diff");
        setName("window"); // NOI18N

        diffTable.setModel(new diffGui.DiffTableModel());
        diffTable.setColumnSelectionAllowed(true);
        diffTable.setFillsViewportHeight(true);
        diffTable.setFocusable(false);
        diffTable.setShowHorizontalLines(false);
        diffTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(diffTable);
        diffTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        removedLinesLabel.setText("Removed lines:");

        removedLinesValueLabel.setText("0");

        addedLinesLabel.setText("Added lines:");

        addedLinesValueLabel.setText("0");

        fileMenu.setMnemonic('F');
        fileMenu.setText("File");

        newDiffMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newDiffMenuItem.setMnemonic('N');
        newDiffMenuItem.setText("New Diff");
        newDiffMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newDiffMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newDiffMenuItem);
        fileMenu.add(jSeparator2);

        exportMenu.setMnemonic('E');
        exportMenu.setText("Export");

        exportNormalDiffMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        exportNormalDiffMenuItem.setMnemonic('N');
        exportNormalDiffMenuItem.setText("Normal Diff");
        exportNormalDiffMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportNormalDiffMenuItemActionPerformed(evt);
            }
        });
        exportMenu.add(exportNormalDiffMenuItem);

        exportUnifiedDiffMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        exportUnifiedDiffMenuItem.setMnemonic('U');
        exportUnifiedDiffMenuItem.setText("Unified Diff");
        exportUnifiedDiffMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportUnifiedDiffMenuItemActionPerformed(evt);
            }
        });
        exportMenu.add(exportUnifiedDiffMenuItem);

        fileMenu.add(exportMenu);
        fileMenu.add(jSeparator1);

        exitMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem1.setMnemonic('x');
        exitMenuItem1.setText("Exit");
        exitMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem1);

        menu.add(fileMenu);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(removedLinesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removedLinesValueLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addedLinesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addedLinesValueLabel)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removedLinesLabel)
                    .addComponent(removedLinesValueLabel)
                    .addComponent(addedLinesLabel)
                    .addComponent(addedLinesValueLabel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Pri kliknuti na tlacitko New Diff se otevre dialogove okno, ktere umozni
	 * uzivateli zadat dva soubory.
	 *
	 * @param evt Event.
	 */
	private void newDiffMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newDiffMenuItemActionPerformed
        chooseDiffFiles.setVisible(true);
}//GEN-LAST:event_newDiffMenuItemActionPerformed

	/**
	 * Otevreni prvniho souboru
	 *
	 * @param evt Event.
	 */
	private void openFirstFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFirstFileButtonActionPerformed
		JFileChooser fc = new JFileChooser(".");
		if (fc.showOpenDialog(menu) == JFileChooser.APPROVE_OPTION) {
			bfst = fc.getSelectedFile();
			firstFileField.setText(bfst.getName());
		}
}//GEN-LAST:event_openFirstFileButtonActionPerformed

	/**
	 * Otevreni druheho souboru.
	 *
	 * @param evt Event.
	 */
	private void openSecondFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSecondFileButtonActionPerformed
		JFileChooser fc = new JFileChooser(bfst);
		if (fc.showOpenDialog(menu) == JFileChooser.APPROVE_OPTION) {
			bsnd = fc.getSelectedFile();
			secondFileField.setText(bsnd.getName());
		}
}//GEN-LAST:event_openSecondFileButtonActionPerformed

	/**
	 * Po zmakcnuti tlacitka OK ve vyberovem dialogu se zpocita diff a zobrazi se.
	 *
	 * @param evt Event.
	 */
	private void okChooseDiffFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okChooseDiffFilesButtonActionPerformed
		if (firstFileField.getText().length() > 0 && secondFileField.getText().length() > 0) {
			// Vytvoreni diffu.
			CreateDiff cd;
			try {
				cd = new CreateDiff(bfst, bsnd);
				fst = bfst;
				snd = bsnd;
			} catch (IOException e) {
				JOptionPane.showMessageDialog(this, "Choose files you want to diff.", "Error", JOptionPane.ERROR_MESSAGE);
				return;
			}

			// Nastaveni diffu do tabulky.
			List<SequenceElement<String>> d = cd.getDiff();
			((DiffTableModel) diffTable.getModel()).setData(d);
			diffTable.getColumnModel().getColumn(1).setCellRenderer(new DiffLineCellRenderer());

			// Nevim proc je potreba vzdy nastavovat minimalni a maximalni sirku, ale jinak to nefunguje
			diffTable.getColumnModel().getColumn(0).setMinWidth(0);
			diffTable.getColumnModel().getColumn(0).setMaxWidth(200);
			diffTable.getColumnModel().getColumn(0).setPreferredWidth((int) Math.floor((Math.log10(d.size()))+1) * 12);

			// Zpocitani statistik diffu.
			DiffStatistics ds = new DiffStatistics(d);
			removedLinesValueLabel.setText(Integer.toString(ds.getRemovedLines()));
			addedLinesValueLabel.setText(Integer.toString(ds.getAddedLines()));

			// Zavreni dialogu.
			chooseDiffFiles.setVisible(false);

		} else {
			JOptionPane.showMessageDialog(this, "Choose files you want to diff.", "Error", JOptionPane.ERROR_MESSAGE);
		}
}//GEN-LAST:event_okChooseDiffFilesButtonActionPerformed

	/**
	 * Pri zmacknuti tlacitka Cancel ve vyberovem dialogu se zrusi vyber.
	 *
	 * @param evt Event.
	 */
	private void cancelChooseDiffFilesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelChooseDiffFilesButtonActionPerformed
		chooseDiffFiles.setVisible(false);
}//GEN-LAST:event_cancelChooseDiffFilesButtonActionPerformed

	/**
	 * Ulozi diff do souboru.
	 * 
	 * @param cd Diff, ktery se ma ulozit.
	 */
	private void exportDiff(CreateDiff cd) {
		JFileChooser fc = new JFileChooser(fst);
		if (fc.showSaveDialog(menu) == JFileChooser.APPROVE_OPTION) {
			File save = fc.getSelectedFile();
			try {
				FileWriter fw;
				fw = new FileWriter(save);
				fw.write(cd.toString());
				fw.close();
			} catch (IOException ex) {
				Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
			}
		}
	}

	/**
	 * Ulozit normal diff.
	 *
	 * @param evt Event.
	 */
	private void exportNormalDiffMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportNormalDiffMenuItemActionPerformed
		try {
			CreateNormalDiff cnd = new CreateNormalDiff(((DiffTableModel) diffTable.getModel()).getData());
			exportDiff(cnd);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Nothing to export.", "Error", JOptionPane.ERROR_MESSAGE);
		}
}//GEN-LAST:event_exportNormalDiffMenuItemActionPerformed

	/**
	 * Ulozit unified diff.
	 *
	 * @param evt Event.
	 */
	private void exportUnifiedDiffMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportUnifiedDiffMenuItemActionPerformed
		try {
			CreateUnifiedDiff cud = new CreateUnifiedDiff(fst, snd, ((DiffTableModel) diffTable.getModel()).getData());
			exportDiff(cud);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Nothing to export.", "Error", JOptionPane.ERROR_MESSAGE);
		}
	}//GEN-LAST:event_exportUnifiedDiffMenuItemActionPerformed

	/**
	 * Ukonceni aplikace.
	 *
	 * @param evt Event.
	 */
	private void exitMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItem1ActionPerformed
		this.setVisible(false);
		this.dispose();
		System.exit(0); // Pouhy dispose nekdy nestacil.
	}//GEN-LAST:event_exitMenuItem1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Window().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addedLinesLabel;
    private javax.swing.JLabel addedLinesValueLabel;
    private javax.swing.JButton cancelChooseDiffFilesButton;
    private javax.swing.JDialog chooseDiffFiles;
    private javax.swing.JTable diffTable;
    private javax.swing.JMenuItem exitMenuItem1;
    private javax.swing.JMenu exportMenu;
    private javax.swing.JMenuItem exportNormalDiffMenuItem;
    private javax.swing.JMenuItem exportUnifiedDiffMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField firstFileField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenuItem newDiffMenuItem;
    private javax.swing.JButton okChooseDiffFilesButton;
    private javax.swing.JButton openFirstFileButton;
    private javax.swing.JButton openSecondFileButton;
    private javax.swing.JLabel removedLinesLabel;
    private javax.swing.JLabel removedLinesValueLabel;
    private javax.swing.JTextField secondFileField;
    // End of variables declaration//GEN-END:variables

}
